generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  login            String   @unique
  username         String   @unique
  hash             String?
  logFrom42        Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  avatar            String?
  status           String   @default("online")
  twoFactorEnabled Boolean  @default(false)
  twoFactorAuthSecret  String?
  friends          Int[]    @default([])
  stat             Stat?
  //matches          Match[]
}

model Stat {
  id     Int  @id @default(autoincrement())
  wins   Int  @default(0)
  losses Int  @default(0)
  elo    Int  @default(1000)
  ladder String @default("bronze")

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

//model Match {
//  id         Int     @id @default(autoincrement())
//  createdAt  DateTime @default(now())
//  winnerId   Int
//  loserId    Int
//  winner     User    @relation(fields: [winnerId], references: [id])
//  loser      User    @relation(fields: [loserId], references: [id])
//  //players    User[]  @relation("Player", fields: [winnerId, loserId])
//}

//model MatchHistory {
//  id        Int     @id @default(autoincrement())
//  matchId   Int
//  playerId  Int
//  outcome   String
//  match     Match   @relation(fields: [matchId], references: [id])
//  player    User    @relation("Player", fields: [playerId], references: [id])
//}
